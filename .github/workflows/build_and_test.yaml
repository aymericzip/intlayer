name: 🔨 Build & Test

on:
  pull_request:
    branches:
      - 'main'

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    # github.actor!= 'github-actions' -> Ignore the pull request which comes from user depbot.
    # github.repository_owner == 'aymericzip' -> Prevents the workflow from running on forks
    if: ${{ github.repository_owner == 'aymericzip' && github.actor != 'github-actions' }}

    name: 🔨 Build & Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]
        pnpm-version: [10.12.1]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🥡 Setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: 🎈 Get pnpm store directory
        id: get-pnpm-cache-dir
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: 🔆 Cache pnpm modules
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: ${{ steps.get-pnpm-cache-dir.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🧩 Install Dependencies
        id: install-dependencies
        run: pnpm install --frozen-lockfile

      - name: 📝 Run eslint
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        run: pnpm run lint-staged

      - name: 🏗️ Build
        id: build-the-mono-repo
        run: |
          pnpm build:ci

      # - name: 🧪 Test packages
      #   run: npm test
