# This workflow will release the packages with Changesets

name: 🚀 Release

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  release:
    # Prevents the workflow from running on forks
    if: ${{ github.repository_owner == 'aymericzip' }}

    name: 🚀 Release
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]
        pnpm-version: [10.12.1]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🥡 Setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: 🎈 Get pnpm store directory
        id: get-pnpm-cache-dir
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: 🔆 Cache pnpm modules
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: ${{ steps.get-pnpm-cache-dir.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🧩 Install Dependencies
        id: install-dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build
        id: build-the-mono-repo
        run: |
          pnpm build:ci

      - name: 🔍 Check for changesets
        id: check-changesets
        run: |
          # Check if there are any changesets that would result in version bumps
          status_output=$(npx changeset status 2>&1 || true)
          if echo "$status_output" | grep -q "No changesets present"; then
            echo "has_changesets=false" >> $GITHUB_OUTPUT
            echo "No changesets present"
          elif echo "$status_output" | grep -q "The following packages are included in this release"; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
            echo "Found changesets to process"
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
            echo "No packages to release"
          fi

      - name: 📣 Create Release Pull Request or Publish to npm
        id: changesets
        if: steps.check-changesets.outputs.has_changesets == 'true'
        uses: changesets/action@v1
        with:
          commit: 'chore(release): version packages'
          title: 'chore(release): version packages'
          version: node .github/changeset-version.js
          publish: npx changeset publish
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ env.NPM_TOKEN }}

      - name: 📄 No changesets found
        if: steps.check-changesets.outputs.has_changesets == 'false'
        run: echo "No changesets found - skipping release process"
