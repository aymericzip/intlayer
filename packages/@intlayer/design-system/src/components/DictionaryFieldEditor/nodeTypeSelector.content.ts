import { type Dictionary, t } from 'intlayer';

export const nodeTypeSelectorContent = {
  key: 'node-type-selector',
  content: {
    triggerPlaceHolder: t({
      en: 'Node type',
      'en-GB': 'Node type',
      fr: 'Type du Nœud',
      es: 'Tipo del nodo',
      de: 'Knotentyp',
      ja: 'ノードタイプ',
      ko: '노드 유형',
      zh: '节点类型',
      it: 'Tipo di nodo',
      pt: 'Tipo de nó',
      hi: 'नोड प्रकार',
      ar: 'نوع العقدة',
      ru: 'Тип узла',
      tr: 'Düğüm türü',
      pl: 'Typ węzła',
      id: 'Tipe Node',
      vi: 'Kiểu node',
    }),
    multilingual: t({
      en: 'Multilingual content',
      'en-GB': 'Multilingual content',
      fr: 'Contenu Multilingue',
      es: 'Contenido multilingüe',
      de: 'Mehrsprachiger Inhalt',
      ja: '複数言語コンテンツ',
      ko: '다중 언어 콘텐츠',
      zh: '多语言内容',
      it: 'Contenuto multilingue',
      pt: 'Conteúdo multilíngue',
      hi: 'बहुभाषी सामग्री',
      ar: 'محتوى متعدد اللغات',
      ru: 'Многоязычный контент',
      tr: 'Çok dilli içerik',
      pl: 'Treść wielojęzyczna',
      id: 'Konten multibahasa',
      vi: 'Nội dung đa ngôn ngữ',
    }),
    text: t({
      en: 'Text',
      'en-GB': 'Text',
      fr: 'Texte',
      es: 'Texto',
      de: 'Text',
      ja: 'テキスト',
      ko: '텍스트',
      zh: '文本',
      it: 'Testo',
      pt: 'Texto',
      hi: 'पाठ',
      ar: 'نص',
      ru: 'Текст',
      tr: 'Metin',
      pl: 'Tekst',
      id: 'Teks',
      vi: 'Văn bản',
    }),
    number: t({
      en: 'Number',
      'en-GB': 'Number',
      fr: 'Nombre',
      es: 'Número',
      de: 'Zahl',
      ja: '数字',
      ko: '숫자',
      zh: '数字',
      it: 'Numero',
      pt: 'Número',
      hi: 'संख्या',
      ar: 'رقم',
      ru: 'Число',
      tr: 'Sayı',
      pl: 'Liczba',
      id: 'Angka',
      vi: 'Số',
    }),
    boolean: t({
      en: 'Boolean',
      'en-GB': 'Boolean',
      fr: 'Booléen',
      es: 'Booleano',
      de: 'Bool',
      ja: 'ブール',
      ko: '불리언',
      zh: '布尔',
      it: 'Booleano',
      pt: 'Booleano',
      hi: 'बूलियन',
      ar: 'منطقي',
      ru: 'Булево',
      tr: 'Boolean',
      pl: 'Wartość logiczna',
      id: 'Boolean',
      vi: 'Boolean',
    }),
    node: t({
      en: 'Object',
      'en-GB': 'Object',
      fr: 'Objet',
      es: 'Objeto',
      de: 'Objekt',
      ja: 'オブジェクト',
      ko: '객체',
      zh: '对象',
      it: 'Oggetto',
      pt: 'Objeto',
      hi: 'ऑब्जेक्ट',
      ar: 'كائن',
      ru: 'Объект',
      tr: 'Nesne',
      pl: 'Obiekt',
      id: 'Object',
      vi: 'Đối tượng',
    }),
    array: t({
      en: 'Array',
      'en-GB': 'Array',
      fr: 'Tableau',
      es: 'Arreglo',
      de: 'Array',
      ja: '配列',
      ko: '배열',
      zh: '数组',
      it: 'Array',
      pt: 'Array',
      hi: 'ऐरे',
      ar: 'مصفوفة',
      ru: 'Массив',
      tr: 'Dizi',
      pl: 'Tablica',
      id: 'Array',
      vi: 'Mảng',
    }),
    enumeration: t({
      en: 'Enumeration',
      'en-GB': 'Enumeration',
      fr: 'Énumération',
      es: 'Enumeración',
      de: 'Enumeration',
      ja: '列挙',
      ko: '열거',
      zh: '枚举',
      it: 'Enumerazione',
      pt: 'Enumeração',
      hi: 'गणना',
      ar: 'تعداد',
      ru: 'Перечисление',
      tr: 'Numaralandırma',
      pl: 'Wyliczenie',
      id: 'Enumeration',
      vi: 'Kiểu liệt kê',
    }),
    gender: t({
      en: 'Gender',
      'en-GB': 'Gender',
      fr: 'Genre',
      es: 'Género',
      de: 'Geschlecht',
      ja: '性別',
      ko: '성별',
      zh: '性别',
      it: 'Genere',
      pt: 'Gênero',
      hi: 'लिंग',
      ar: 'جنس',
      ru: 'Пол',
      tr: 'Cins',
      pl: 'Płeć',
      id: 'Gender',
      vi: 'Giới tính',
    }),
    nest: t({
      en: 'Nesting',
      'en-GB': 'Nesting',
      fr: 'Imbriquation',
      es: 'Anidación',
      de: 'Vererbung',
      ja: 'ネスト',
      ko: '중첩',
      zh: '嵌套',
      it: 'Nidificazione',
      pt: 'Nido',
      hi: 'नेस्टेंस',
      ar: 'مستوى',
      ru: 'Вложенность',
      tr: 'İç içe geçme',
      pl: 'Zagnieżdżanie',
      id: 'Nesting',
      vi: 'Lồng nhau',
    }),
    insertion: t({
      en: 'Insertion',
      'en-GB': 'Insertion',
      fr: 'Insertion',
      es: 'Inserción',
      de: 'Einfügung',
      ja: '挿入',
      ko: '삽입',
      zh: '插入',
      it: 'Inserimento',
      pt: 'Inserção',
      hi: 'सम्मिलन',
      ar: 'إدراج',
      ru: 'Вставка',
      tr: 'Ekleme',
      pl: 'Wstawianie',
      id: 'Insertion',
      vi: 'Chèn',
    }),
    condition: t({
      en: 'Condition',
      'en-GB': 'Condition',
      fr: 'Condition',
      es: 'Condición',
      de: 'Bedingung',
      ja: '条件',
      ko: '조건',
      zh: '条件',
      it: 'Condizione',
      pt: 'Condição',
      hi: 'शर्त्ता',
      ar: 'شرط',
      ru: 'Условие',
      tr: 'Koşul',
      pl: 'Warunek',
      id: 'Condition',
      vi: 'Điều kiện',
    }),
    file: t({
      en: 'File',
      'en-GB': 'File',
      fr: 'Fichier',
      es: 'Archivo',
      de: 'Datei',
      ja: 'ファイル',
      ko: '파일',
      zh: '文件',
      it: 'File',
      pt: 'Arquivo',
      hi: 'फ़ाइल',
      ar: 'ملف',
      ru: 'Файл',
      tr: 'Dosya',
      pl: 'Plik',
      id: 'File',
      vi: 'Tệp',
    }),
    markdown: t({
      en: 'Markdown',
      'en-GB': 'Markdown',
      fr: 'Markdown',
      es: 'Markdown',
      de: 'Markdown',
      ja: 'マークダウン',
      ko: '마크다운',
      zh: 'Markdown',
      it: 'Markdown',
      pt: 'Markdown',
      hi: 'मार्कडाउन',
      ar: 'مارك داون',
      ru: 'Markdown',
      tr: 'Markdown',
      pl: 'Markdown',
      id: 'Markdown',
      vi: 'Markdown',
    }),
    reactNode: t({
      en: 'React Node',
      'en-GB': 'React Node',
      fr: 'Node React',
      es: 'Nodo React',
      de: 'React-Knoten',
      ja: 'リアル・ノード',
      ko: '리액 노드',
      zh: 'React 节点',
      it: 'Nodo React',
      pt: 'Nó React',
      hi: 'रेड नोड',
      ar: 'عقدة رياكت',
      ru: 'Реакт узел',
      tr: 'React Node',
      pl: 'Węzeł React',
      id: 'React Node',
      vi: 'React Node',
    }),
  },
  title: 'Node type selector',
  description:
    'Defines the available node types that can be selected for content modeling, including text, number, boolean, object structures, arrays, and other specialized types like enumeration, gender, condition, and markdown.',
  tags: ['content modeling', 'field type', 'editor'],
} satisfies Dictionary;

export default nodeTypeSelectorContent;
